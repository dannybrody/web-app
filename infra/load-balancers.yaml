Description: >
    This template deploys an ELastic Load Balancer that exposes various services.
    We create them it a seperate nested template, so it can be referenced by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    Subnets:
        Description: Choose which subnets the Applicaion Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Applicaion Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

    DomainName:
        Description: Fully qualified domain name (FQDN) of your site
        Type: String

    SubDomainName:
        Description: Sub domain you want the load balancer to listen on
        Type: String

    Certificate:
        Description: ACM certificate for SSL
        Type: String  

    InstancePort:
        Description: Backend traffic port for the application
        Type: Number 

Resources:

    myDNS:
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: !Join [ ".", [ !Ref DomainName, "" ] ]
        RecordSets:
        - Name: !Join [ ".", [ !Ref SubDomainName, !Ref DomainName, "" ] ]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneNameID
            DNSName: !GetAtt LoadBalancer.DNSName

    LoadBalancer:
        Type: AWS::ElasticLoadBalancing::LoadBalancer
        Properties:
            LoadBalancerName: !Sub ${EnvironmentName}-${SubDomainName}-ELB
            CrossZone: true
            Subnets: !Ref Subnets
            Scheme: internet-facing
            SecurityGroups: 
                - !Ref SecurityGroup
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName
            Listeners:
                - LoadBalancerPort: 80
                  InstancePort: !Ref InstancePort
                  Protocol: HTTP
                - InstancePort: !Ref InstancePort
                  SSLCertificateId: !Ref Certificate
                  LoadBalancerPort: 443
                  Protocol: HTTPS
                  InstanceProtocol: HTTP
            HealthCheck:
                Target: !Sub HTTP:${InstancePort}/login
                HealthyThreshold: '2'
                UnhealthyThreshold: '2'
                Interval: '5'
                Timeout: '2'
            ConnectionDrainingPolicy:
                Enabled: 'true'
                Timeout: '60'

Outputs:

    LoadBalancer:
        Description: A reference to the ELB
        Value: !Ref LoadBalancer

