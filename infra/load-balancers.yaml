Description: >
    This template deploys an Application Load Balancer that exposes various services.
    We create them it a seperate nested template, so it can be referenced by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Applicaion Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Applicaion Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Applicaion Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

    DomainName:
        Description: Fully qualified domain name (FQDN) of the site that you want to secure with the ACM certificate
        Type: String

Resources:

    LoadBalancerRecordSet:
        Type: AWS::Route53::RecordSet
        Properties:
          HostedZoneName: !Join [ "", [ !Ref DomainName , "." ] ]
          Name:  !Join [ "", [ !Ref DomainName , "." ] ]
          Type: A
          AliasTarget:
            EvaluateTargetHealth: false
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
            DNSName: !GetAtt LoadBalancer.DNSName
        DependsOn:
          - LoadBalancer


    LoadBalancerCertificate:
        Type: AWS::CertificateManager::Certificate
        Properties:
            DomainName: !Join [ ".", [ "*", !Ref DomainName ] ]


    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        DependsOn: LoadBalancerCertificate
        Properties:
            Name: !Ref EnvironmentName
            Subnets: !Ref Subnets
            SecurityGroups: 
                - !Ref SecurityGroup
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn: LoadBalancer
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Certificates:
                - CertificateArn: !Ref LoadBalancerCertificate
            Port: 443
            Protocol: HTTPS
            DefaultActions: 
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup
    
    # We define a default target group here, as this is a mandatory Parameters
    # when creating an Application Load Balancer Listener. This is not used, instead
    # a target group is created per-service in each service template (../services/*)
    DefaultTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: default
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            TargetGroupAttributes:
            - Key: deregistration_delay.timeout_seconds
              Value: '60'
           
Outputs:

    LoadBalancerCertificate:
        Description: A reference to the SSL Certficate
        Value: !Ref LoadBalancerCertificate        
    LoadBalancer:
        Description: A reference to the Application Load Balancer
        Value: !Ref LoadBalancer

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName

    Listener:
        Description: A reference to a port 443 listener
        Value: !Ref LoadBalancerListener  
